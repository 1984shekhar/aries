<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html>  <head>    <link rel="stylesheet" href="http://codehaus.org/codehaus-style.css" type="text/css">        <link rel="stylesheet" href="style.css" type="text/css">    <title>ServiceMix - Use Cases</title>  </head>  <body>    <table width="100%" id="layout" style="padding:0px;margin0px;border-collapse:collapse;">      <tr>        <td colspan="3" style="padding:8px;">          <table width="100%" id="banner" style="padding:0px;margin:0px">            <tr id="header_row">              <td align="left" valign="middle" style="padding:0px;margin:0px;">                <span id="Content"><span><span class="nobr"><a href="http://incubator.apache.org/servicemix" rel="nofollow"><img align="absmiddle" border=0 src="images/logo.gif"></a></span></span></span>              </td>              <td align="right" valign="middle" style="padding:0px;margin:0px;">                <span id="Content"><span><span class="nobr"><a href="http://incubator.apache.org" rel="nofollow"><img align="absmiddle" border=0 src="http://incubator.apache.org/images/apache-incubator-logo.png"></a></span></span></span>              </td>            </tr>          </table>        </td>      </tr>      <tr>        <td colspan="3" id="breadcrumbs">          <table width="100%" id="banner" style="padding:0px;margin:0px">            <tr>              <td align="left">                <a href="">Home</a>  | Use Cases              </td>              <td align="right">                  <span id="Content"><span><a href="Download" title="Download">Download</a> | <span class="nobr"><a href="http://servicemix.codehaus.org/maven/servicemix-core/apidocs/" rel="nofollow">JavaDocs</a></span> <span class="nobr"><a href="http://servicemix.codehaus.org/maven/servicemix-components/apidocs/" rel="nofollow">Components</a></span> | <a href="Source" title="Source">Source</a> | <span class="nobr"><a href="http://docs.codehaus.org/pages/listpages.action?key=SM" rel="nofollow">Wiki</a></span> |<span class="nobr"><a href="irc://irc.codehaus.org/servicemix" rel="nofollow">IRC</a></span> | <span class="nobr"><a href="http://servlet.uwyn.com/drone/log/hausbot/servicemix" rel="nofollow">IRC Log</a></span> | <a href="Mailing+Lists" title="Mailing Lists">Mailing Lists</a> | <a href="Discussion+Forums" title="Discussion Forums">Discussion Forums</a> | <span class="nobr"><a href="http://jira.logicblaze.com/jira/browse/SM" rel="nofollow">Support</a></span></span></span>              </td>            </tr>          </table>        </td>      </tr>      <tr>        <td id="leftColumn" valign="top" style="padding-top: 0px;">          <span id="Content"><h3><a name="Navigation-Overview"></a>Overview</h3>  <ul class="alternate" type="square">    <li><a href="Home" title="Home">Home</a></li>    <li><a href="Introduction+to+ESB" title="Introduction to ESB">Introduction to ESB</a></li>    <li><a href="Background+to+ServiceMix" title="Background to ServiceMix">Background to ServiceMix</a></li>    <li><a href="News" title="News">News</a></li>    <li><a href="FAQ" title="FAQ">FAQ</a></li>    <li><a href="Download" title="Download">Download</a></li>  </ul>  <h3><a name="Navigation-Community"></a>Community</h3>  <ul class="alternate" type="square">    <li><span class="nobr"><a href="http://docs.codehaus.org/pages/listpages.action?key=SM" rel="nofollow">Wiki</a></span></li>    <li><a href="Discussion+Forums" title="Discussion Forums">Discussion Forums</a></li>    <li><a href="Mailing+Lists" title="Mailing Lists">Mailing Lists</a></li>    <li><a href="Contributing" title="Contributing">Contributing</a></li>    <li><a href="Team" title="Team">Team</a></li>    <li><a href="Users" title="Users">Users</a></li>  </ul>  <h3><a name="Navigation-Documentation"></a>Documentation</h3>  <ul class="alternate" type="square">    <li><a href="Getting+Started" title="Getting Started">Getting Started</a></li>    <li><a href="Running" title="Running">Running</a></li>    <li><a href="Examples" title="Examples">Examples</a></li>    <li><a href="Use+Cases" title="Use Cases">Use Cases</a></li>    <li><a href="Configuration" title="Configuration">Configuration</a></li>    <li><a href="Xml+Reference" title="Xml Reference">Xml Reference</a></li>    <li><a href="Management" title="Management">Management</a></li>    <li><a href="Architecture" title="Architecture">Architecture</a></li>    <li><a href="Clustering" title="Clustering">Clustering</a></li>    <li><a href="NMR+Flows" title="NMR Flows">NMR Flows</a></li>    <li><a href="Articles" title="Articles">Articles</a></li>  </ul>  <h3><a name="Navigation-Reference"></a>Reference</h3>  <ul class="alternate" type="square">    <li><span class="nobr"><a href="http://java.sun.com/integration/1.0/docs/sdk/api/index.html" rel="nofollow">JBI API</a></span></li>    <li><span class="nobr"><a href="http://servicemix.codehaus.org/maven/servicemix-core/apidocs/" rel="nofollow">JavaDocs Core</a></span></li>    <li><span class="nobr"><a href="http://servicemix.codehaus.org/maven/servicemix-components/apidocs/" rel="nofollow">JavaDocs Components</a></span></li>    <li><span class="nobr"><a href="http://servicemix.codehaus.org/maven/servicemix-console/apidocs/" rel="nofollow">JavaDocs Console</a></span></li>    <li><a href="Glossary" title="Glossary">Glossary</a></li>  </ul>  <h3><a name="Navigation-Features"></a>Features</h3>  <ul class="alternate" type="square">    <li><a href="Components" title="Components">Components</a></li>    <li><a href="Routing" title="Routing">Routing</a></li>    <li><a href="Transformation" title="Transformation">Transformation</a></li>    <li><a href="Spring+Client+Toolkit" title="Spring Client Toolkit">Spring Client Toolkit</a></li>    <li><a href="Client+API" title="Client API">Client API</a></li>    <li><a href="POJO+support" title="POJO support">POJO support</a></li>    <li><a href="Expressions" title="Expressions">Expressions</a></li>    <li><a href="Component+helper+classes" title="Component helper classes">Component helper classes</a></li>    <li><a href="Ant+Tasks" title="Ant Tasks">Ant Tasks</a></li>    <li><a href="JMX+Console" title="JMX Console">JMX Console</a></li>  </ul>  <h3><a name="Navigation-Integration"></a>Integration</h3>  <ul class="alternate" type="square">    <li><a href="Spring+support" title="Spring support">Spring support</a></li>    <li><a href="Geronimo+Integration" title="Geronimo Integration">Geronimo Integration</a></li>    <li><a href="JBoss+Deployer" title="JBoss Deployer">JBoss Integration</a></li>    <li><a href="Tomcat+Integration" title="Tomcat Integration">Tomcat Integration</a></li>    <li><a href="JNDI+configuration" title="JNDI configuration">JNDI configuration</a></li>  </ul>  <h3><a name="Navigation-ServiceMixComponents"></a>ServiceMix Components</h3>  <ul class="alternate" type="square">    <li><a href="BPEL" title="BPEL">BPEL</a></li>    <li><a href="Cache" title="Cache">Cache</a></li>    <li><a href="Drools" title="Drools">Drools</a></li>    <li><a href="Email" title="Email">Email</a></li>    <li><a href="File" title="File">File</a></li>    <li><a href="FTP" title="FTP">FTP</a></li>    <li><a href="Groovy" title="Groovy">Groovy</a></li>    <li><a href="HTTP" title="HTTP">HTTP</a></li>    <li><a href="Jabber" title="Jabber">Jabber</a></li>    <li><a href="JAX+WS" title="JAX WS">JAX WS</a></li>    <li><a href="JCA" title="JCA">JCA</a></li>    <li><a href="JMS" title="JMS">JMS</a></li>    <li><a href="Quartz" title="Quartz">Quartz</a></li>    <li><a href="Reflection" title="Reflection">Reflection</a></li>    <li><a href="RSS" title="RSS">RSS</a></li>    <li><a href="SAAJ" title="SAAJ">SAAJ</a></li>    <li><a href="Scripting" title="Scripting">Scripting</a></li>    <li><a href="ServiceMix" title="ServiceMix">ServiceMix</a></li>    <li><a href="Validation" title="Validation">Validation</a></li>    <li><a href="XFire" title="XFire">XFire</a></li>    <li><a href="XPath+Router" title="XPath Router">XPath Router</a></li>    <li><a href="XSLT" title="XSLT">XSLT</a></li>    <li><a href="XSQL" title="XSQL">XSQL</a></li>    <li><a href="VFS" title="VFS">VFS</a></li>    <li><a href="WSIF" title="WSIF">WSIF</a></li>  </ul>  <h3><a name="Navigation-Tooling"></a>Tooling</h3>  <ul class="alternate" type="square">    <li><a href="Eclipse+plugin" title="Eclipse plugin">Eclipse plugin</a></li>    <li><a href="JBoss+Deployer" title="JBoss Deployer">JBoss Deployer</a></li>    <li><a href="WAR+Deployment" title="WAR Deployment">WAR Deployment</a></li>    <li><a href="Maven+JBI+plugin" title="Maven JBI plugin">Maven JBI plugin</a></li>    <li><a href="Maven+SAR+plugin" title="Maven SAR plugin">Maven SAR plugin</a></li>  </ul>  <h3><a name="Navigation-Utilities"></a>Utilities</h3>  <ul class="alternate" type="square">    <li><a href="Reflection" title="Reflection">Reflection</a></li>  </ul>  <h3><a name="Navigation-OtherJBIsoftware"></a>Other JBI software</h3>  <ul class="alternate" type="square">    <li><span class="nobr"><a href="http://forge.objectweb.org/projects/celtix/" rel="nofollow">Celtix</a></span></li>    <li><span class="nobr"><a href="http://pxe.fivesight.com/wiki/display/PXE/Home" rel="nofollow" title="Visit page outside Confluence">PXE BPEL Engine</a></span></li>  </ul>  <h3><a name="Navigation-RelatedProjects"></a>Related Projects</h3>  <ul class="alternate" type="square">    <li><span class="nobr"><a href="http://activemq.codehaus.org/" rel="nofollow">ActiveMQ</a></span></li>    <li><span class="nobr"><a href="http://jencks.org/" rel="nofollow">Jencks</a></span></li>    <li><span class="nobr"><a href="http://lingo.codehaus.org/" rel="nofollow">Lingo</a></span></li>    <li><span class="nobr"><a href="http://activesoap.codehaus.org/" rel="nofollow">ActiveSOAP</a></span></li>    <li><span class="nobr"><a href="http://www.springframework.org/" rel="nofollow">Spring</a></span></li>    <li><span class="nobr"><a href="http://geronimo.apache.org/" rel="nofollow">Geronimo</a></span></li>  </ul>  <h3><a name="Navigation-Support"></a>Support</h3>  <ul class="alternate" type="square">    <li><span class="nobr"><a href="http://jira.logicblaze.com/jira/browse/SM" rel="nofollow">Issues</a></span></li>    <li><span class="nobr"><a href="http://jira.logicblaze.com/browse/SM?report=com.atlassian.jira.plugin.system.project:roadmap-panel" rel="nofollow">Roadmap</a></span></li>    <li><span class="nobr"><a href="http://jira.logicblaze.com/browse/SM?report=com.atlassian.jira.plugin.system.project:changelog-panel" rel="nofollow">Change log</a></span></li>  </ul>  <h3><a name="Navigation-Developers"></a>Developers</h3>  <ul class="alternate" type="square">    <li><a href="Source" title="Source">Source</a></li>    <li><a href="Roadmap" title="Roadmap">Roadmap</a></li>    <li><a href="Ideas" title="Ideas">Ideas</a></li>    <li><a href="Becoming+a+committer" title="Becoming a committer">Becoming a committer</a></li>    <li><a href="Release+Guide" title="Release Guide">Release Guide</a></li>    <li><span class="nobr"><a href="http://ci.codehaus.org/beetlejuice/viewProjectSummary.action?projectName=ServiceMix" rel="nofollow">BeetleJuice</a></span></li>    <li><span class="nobr"><a href="http://servicemix.codehaus.org/maven/clover/" rel="nofollow">Clover Report</a></span></li>    <li><span class="nobr"><a href="http://servicemix.codehaus.org/maven/xref/index.html" rel="nofollow">Source XRef</a></span></li>    <li><span class="nobr"><a href="http://servicemix.codehaus.org/maven/xref-test/index.html" rel="nofollow">Test Source XRef</a></span></li>    <li><span class="nobr"><a href="http://servicemix.codehaus.org/maven/servicemix.xsd.html" rel="nofollow">XSD</a></span></li>  </ul>  <h3><a name="Navigation-Toolsweuse"></a>Tools we use</h3><span><span class="nobr"><a href="http://www.yourkit.com" rel="nofollow"><img align="absmiddle" border=0 src="http://www.servicemix.org/download/attachments/25208/yourkit.jpg"></a></span></span></span>            <h3 class="heading3">Feeds</h3>            <table border="0" cellspacing="4px">            <tr>              <td align="right">                <a href="http://docs.codehaus.org/spaces/rss.action?key=SM&newPages=false"><img src="http://docs.codehaus.org/images/icons/rss.gif" border="0"></a><br/>              </td>              <td align="left">                <a href="http://docs.codehaus.org/spaces/rss.action?key=SM&newPages=false">Site</a>              </td>            </tr>            <tr>              <td align="right">                <a href="http://docs.codehaus.org/spaces/blogrss.action?key=SM"><img src="http://docs.codehaus.org/images/icons/rss.gif" border="0"></a>              </td>              <td align="left">                <a href="http://docs.codehaus.org/spaces/blogrss.action?key=SM">News</a>              </td>            </tr>            </table>        </td>        <td id="rightColumn" valign="top">          <div id="page_title">            <table width="100%">              <tr>                <td>            Use Cases                 </td>                <td align="right">                            </td>              </tr>            </table>          </div>          <div>  <div id="Content">    <h2><a name="UseCases-Introduction"></a>Introduction</h2>    <p>The <span class="nobr"><a href="http://www.servicemix.org/Examples" rel="nofollow">Examples</a></span> provide coding level details for implementing particular aspects of ServiceMix. This document extends the coding examples into their business use. The following use cases are documented:</p>    <ul>      <li><a href="#UseCases-BasicUseCase">Basic</a></li>      <li><a href="#UseCases-FileBindingUseCase">File Binding</a></li>      <li><a href="#UseCases-BPELUseCase">BPEL Binding</a></li>      <li><a href="#UseCases-JMSUseCase">JMS Binding</a></li>      <li><a href="#UseCases-HTTPUseCase">HTTP Binding</a></li>      <li><a href="#UseCases-QuartzUseCase">Quartz Binding</a></li>      <li><a href="#UseCases-RSSUseCase">RSS Binding</a></li>    </ul>    <h2><a name="UseCases-BusinessUseCasefortheBasicExample"></a><a name="UseCases-BasicUseCase"></a> Business Use Case for the <em>Basic</em> Example</h2>    <p>ServiceMix is an Enterprise Service Bus (ESB) that is based on the Java Business Integration (JBI) standard <span class="nobr"><a href="http://www.jcp.org/en/jsr/detail?id=208" rel="nofollow">JSR 208</a></span>. The JBI-based design specifies a standards-based pluggable architecture with a JVM-based runtime component called the Normalized Message Router (NMR). The <span class="nobr"><a href="Basic" rel="nofollow" title="Visit page outside Confluence">Basic</a></span> example demonstrates how applications communicate via the ServiceMix ESB, and the role that the NMR plays in that communication. Similar techniques could be used to plug any external  application or service into ServiceMix (e.g. SAP, Peoplesoft, spreadsheets, POJOs, Webservices and EJBs) and allow it to communicate with other external applications or components using ServiceMix. </p>    <p>A hypothetical business scenario, which extends the <em>Basic</em> Example, is that of a department store distributor. This distributor sells products from multiple wholesalers (suppliers) to various retailers (customers). The distributor presents a common interface for product ordering to each of its department store customers. However, the distributor must work with a different ordering interface for each wholesale suppliers for the products they are buying for distribution.</p>    <p>Using an ESB, the distributor has developed a number of components to receive department store orders and then dynamically route and transform these orders to the appropriate wholesaler. The order processing flow is described as follows:</p>    <p class="paragraph">      <ol>        <li>Using the distributor's web interface, a department store customer submits an order for multiple products. An HTTP request is sent to the <em>OrderReceiver</em>, an HTTP binding component (BC). </li>        <li>The <em>OrderReceiver</em> sends the message to an <em>OrderRouter</em> service engine (SE)  component. This SE is responsible for parsing the order and deciding, based on the message content, which <em>OrderTransformer</em> should receive which part of the message (i.e., an order for a product).</li>        <li>The <em>OrderRouter</em> publishes the orders to the appropriate message topics based on the message content. Specifically, the <em>OrderRouter</em> publishes the messages based on which wholesaler sells the item.</li>        <li>The <em>OrderTransformer</em> is a service engine component, which modifies the message and puts it in a format which is readable by the wholesaler interface that will fulfill the order.</li>        <li>Each <em>OrderTransformer</em> sends the modified message to the <em>OrderProcessor</em>.</li>        <li>The <em>OrderProcessor</em> is a binding component that has two functions:<br> a. It places an order to the appropriate wholesaler through the wholesaler's Webservice or proprietary interface. <br> b. It also publishes a message about the order on a topic.</li>        <li>The message on the topic is subsequently picked up by the <em>BusinessMonitor</em> component via the <em>jmsTrace</em> component.</li>        <li>The <em>BusinessMonitor</em> component monitors the orders for quality assurance and business analytics, such as data mining.</li>      </ol>    </p>    <p>The following diagram illustrates the procedure outlined above:</p>    <p class="paragraph">      <div class="panel" style="border-style: solid; border-color: #ccc; ">        <div class="panelHeader" style="border-bottom-style: solid; border-bottom-color: #ccc; "><b>Department Store Distributor's Order Processing System</b></div>        <div class="panelContent">          <div align="center"><img border=0 src="http://www.servicemix.org/download/attachments/33556/basicflow_as_usecase.jpg"></div>        </div>      </div>      <ol>        <li><em>External</em> means the application is outside of the ESB.</li>        <li><em>Resource Adapter</em>: a resource adapter provides connectivity between a specific external application and the ESB. In the <em>Basic</em> example the jencks container provides a JMS resource adapater.</li>        <li><em>Binding Component (BC)</em>: a BC provides connectivity to applications that are external to the ESB.</li>        <li><em>Service Engine (SE)</em>: a service engine provides business logic and transformation services to other components within the enterprise service bus.</li>      </ol>    </p>    <h2><a name="UseCases-BusinessUseCasefortheFileBindingExample"></a><a name="UseCases-FileBindingUseCase"></a> Business Use Case for the <em>File Binding</em> Example</h2>    <p>The <span class="nobr"><a href="file+binding" rel="nofollow" title="Visit page outside Confluence">file binding</a></span> example shows how components of ServiceMix can interact with the file system. This is important because there are applications that write files out to a directory on disk and other applications that may need access to those files. This is a simple example of how a ServiceMix component can read a file from the disk, process it into a normalized message, then send it via the NMR to another ServiceMix component. The receiving component can process the message (which contains the file) and write it out to another location on disk.</p>    <p>A hypothetical business scenario: An online wholesale distributor of books and music CDs, receives a nightly order from a retail store. The nightly order is transmitted to the distributor as a file and placed in a particular directory on disk. There is a ServiceMix component (getOrders) that continually scans that directory looking for order files. When it sees a file, it reads it from the disk, then transforms it into a normalized message. It sends the message over the bus (NMR) to another component called &quot;placeOrders.&quot; The placeOrders program divides the order into separate orders for its' suppliers, e.g., one order will be placed with the distributor's book supplier, one order will go to the CD supplier, etc. At some later point, the suppliers will log in and retrieve their order files - this is not shown here, but can have an automatic or manual implementation and this process could also be integrated with ServiceMix. </p>    <p>The following diagram illustrates this:</p>    <p class="paragraph">      <div class="panel" style="border-style: solid; border-color: #ccc; ">        <div class="panelHeader" style="border-bottom-style: solid; border-bottom-color: #ccc; "><b>Online Distributor's Order Processing System</b></div>        <div class="panelContent">          <div align="center"><img border=0 src="http://www.servicemix.org/download/attachments/33556/filebinding_as_usecase.jpg"></div>        </div>      </div>    </p>    <h2><a name="UseCases-BusinessUseCasefortheBPELExample"></a><a name="UseCases-BPELUseCase"></a> Business Use Case for the <em>BPEL</em> Example</h2>    <p>The <span class="nobr"><a href="BPEL+example" rel="nofollow" title="Visit page outside Confluence">BPEL</a></span> example shows how to integrate the PXE BPEL Engine with ServiceMix. Business Process Execution Language (BPEL) defines a notation for specifying business process behavior based on Web Services. PXE is a runtime component for executing processes defined by the BPEL4WS 1.1 specification and forthcoming WS-BPEL 2.0 OASIS standard. The PXE BPEL engine uses JMX to provide management and introspection functionality. </p>    <p>A hypothetical business scenario, which illustrates the BPEL example, is a travel agent airline ticketing system that offers online reservations to its customers. When a customer books a flight, the <em>reserveTicket</em> class of the online ticket reservation system publishes its request to the ticketing topic. The Binding Component, which is capable of communicating both to the external reserveTicket class and the Airline Reservation System, is a subscriber to the ticketing topic and thus receives the request. The Binding Component then forwards the request via the NMR to the Airline Reservation System inside the PxeBpelEngine service container. The Airline Reservation System checks its database to see if it can still accommodate the request and generates a response. After that, the Airline Reservation system sends the response back to the Binding Component again via the NMR. The Binding Component then publishes it on the ticketing topic. The reserveTicket class is also a subscriber of the topic and thus receives the message. Whether the request is granted or not, the reply is published to the customer.</p>    <p>The following diagram illustrates this:</p>    <p class="paragraph">      <div class="panel" style="border-style: solid; border-color: #ccc; ">        <div class="panelHeader" style="border-bottom-style: solid; border-bottom-color: #ccc; "><b>Online Ticket Reservation System</b></div>        <div class="panelContent">          <div align="center"><img border=0 src="http://www.servicemix.org/download/attachments/33556/bpel_as_usecase.jpg"></div>        </div>      </div>    </p>    <h2><a name="UseCases-BusinessUseCasefortheJMSBindingExample"></a><a name="UseCases-JMSUseCase"></a> Business Use Case for the <em>JMS Binding</em> Example</h2>    <p>The <em>JMS Binding</em> example shows how to connect the JMS bindings to a simple service component inside ServiceMix. </p>    <p>A hypothetical business scenario, which encompasses the <span class="nobr"><a href="http://docs.codehaus.org/x/1nM" rel="nofollow">JMS Binding</a></span> example, is that of a web application making a request for a Tax ID Number (TIN). This example is based on a web-based Tax ID Application form, in which a user enters data, such as first and last name, date of birth, and place of birth. The web Tax ID Applicatoin form sends the request to the &quot;JMSServlet&quot; servlet. The servlet publishes the request on the JMS submission topic. The applicationFormReceiver, which is a JMS Binding component that subscribes to the submission topic, receives the request. The applicationFormReceiver sends the data to the formProcessor via the Normalized Message Router (NMR). The formProcessor is a service engine that assigns the appropriate TIN to the user. The formProcessor then publishes the response to the result topic. A Message Driven Bean (MDB) then subscribes to the result topic, receives the response message, updates the Tax ID database with the new TIN, and notifies the user that the request has been fulfilled. The user can then check the database to get the requested TIN.</p>    <p>The steps below detail the workflow outlined above:</p>    <p class="paragraph">      <ol>        <li>The user fills in the web Tax ID application form, entering data such as first and last name, date of birth, and place of birth, etc.</li>        <li>The web form submits the request to a servlet running in an application server.</li>        <li>The JMSServlet creates a record for the submitter in a database table. Let's say the table contains a RECORD ID, USERNAME and TAXID fields.</li>        <li>The servlet then responds to the user with a page that has a message and a link. The message says, &quot;Check your email for a message that will contain a link for checking TIN status.&quot; It also sends an email to the person with a link that says &quot;Click here to retrieve your record.&quot; The link contains the record ID and points to a JSP or servlet that can retrieve the user's record. Initially the TAXID field will say &quot;PENDING&quot;.</li>        <li>The JMSServlet then publishes the request to the submission topic.</li>        <li>The applicationFormReceiver, which is a JMS Binding component that subscribes to the submission topic, receives the request.</li>        <li>The applicationFormReceiver creates a normalized message and sends it to the formProcessor via the NMR.</li>        <li>The formProcessor assigns the appropriate TIN to the user. The formProcessor then publishes the response to the result topic.</li>        <li>A MDB is also running in the same application server as the servlet. The MDB is listening on the Result topic for the result from the formProcessor.</li>        <li>When the MDB reads the TIN, it updates the user's record in the database.</li>        <li>Now, when the user clicks the link, the TAXID field will have the TIN and it will no longer say, &quot;PENDING&quot;</li>      </ol>    </p>    <p>The diagram below illustrates the process described above:</p>    <p class="paragraph">      <div class="panel" style="border-style: solid; border-color: #ccc; ">        <div class="panelHeader" style="border-bottom-style: solid; border-bottom-color: #ccc; "><b>Online Application for Tax ID No. System</b></div>        <div class="panelContent">          <div align="center"><img border=0 src="http://www.servicemix.org/download/attachments/33556/jms_as_usecase.jpg"></div>        </div>      </div>    </p>    <h2><a name="UseCases-BusinessUseCasefortheHTTPBindingExample"></a><a name="UseCases-HTTPUseCase"></a> Business Use Case for the <em>HTTP Binding</em> Example</h2>    <p>The <span class="nobr"><a href="HTTP+binding" rel="nofollow" title="Visit page outside Confluence">HTTP binding</a></span> example shows how to use the HTTP bindings to handle a simple http post. </p>    <p>A hypothetical business scenario, which illustrates the HTTP Binding example, is that of a Department of Public Works Online Project Monitoring System. The head engineer uses this web based system to check the budget availability for a work item. Only if there is sufficient budget for the work item will it be implemented.</p>    <p>This example starts at the isBudgetAvailable class of the Department of Public Works Project Monitoring System when it posts a request on URL <span class="nobr"><a href="http://localhost:8912" rel="nofollow">http://localhost:8912</a></span>. Included in this posted request, is the budget allocation ID of the related work item. The HTTP Server listens on this URL and receives the request. The HTTP Server then forwards the request to the Saaj Binding Component, as this component is capable of communicating to an UrlEndpoint. The UrlEndpoint is the Budget Checking System. The Budget Checking system checks to determin if the funding level is still sufficient for the implementation of the work item, then formulates the appropriate response and sends the response back to Saaj Binding Component. In turn, the Saaj Binding Component sends the response back to HTTP receiver via the normalized message router. The HTTP receiver then sends the message to the <span class="nobr"><a href="http://localhost:8912" rel="nofollow">http://localhost:8912</a></span>. The message is picked up by the isBudgetAvailable class. Finally, the respone message is printed on the console.</p>    <p>The following diagram illustrates this:</p>    <p class="paragraph">      <div class="panel" style="border-style: solid; border-color: #ccc; ">        <div class="panelHeader" style="border-bottom-style: solid; border-bottom-color: #ccc; "><b>Department of Public Works Project Monitoring System</b></div>        <div class="panelContent">          <div align="center"><img border=0 src="http://www.servicemix.org/download/attachments/33556/usecase_for_http.jpg"></div>        </div>      </div>    </p>    <h2><a name="UseCases-BusinessUseCasefortheQuartzBindingExample"></a><a name="UseCases-QuartzUseCase"></a> Business Use Case for the <em>Quartz Binding</em> Example</h2>    <p>The <em>Quartz binding</em> example shows how to use Quartz timer. </p>    <p>A hypothetical business scenario, which illustrates the <span class="nobr"><a href="http://docs.codehaus.org/x/2HM" rel="nofollow">Quartz Binding</a></span> example, is a network status monitoring system that will prompt System/Network Administrators when a network connection becomes disconnected. Every 5 seconds, the timer component will invoke a service that will determine whether or not the network is connected. If a problem is found this monitoring system will alert the Network Administrators.</p>    <p>The following diagram illustrates this:</p>    <p class="paragraph">      <div class="panel" style="border-style: solid; border-color: #ccc; ">        <div class="panelHeader" style="border-bottom-style: solid; border-bottom-color: #ccc; "><b>Network Status Indicator</b></div>        <div class="panelContent">          <div align="center"><img border=0 src="http://www.servicemix.org/download/attachments/33556/usecase_for_quartz.jpg"></div>        </div>      </div>    </p>    <h2><a name="UseCases-BusinessUseCasefortheRSSExample"></a><a name="UseCases-RSSUseCase"></a> Business Use Case for the <em>RSS</em> Example</h2>    <p>The <em>RSS binding</em> example shows how to use the RSS bindings to poll RSS feeds for updates. RSS is an XML format designed for sharing web content between sites.</p>    <p>A hypothetical business scenario, which uses RSS, is a web site constantly polling RSS feeds for its &quot;What's New&quot; section. Whenever <em>rssPoller</em> detects a change in one of the RSS feeds, <em>rssPoller</em> will send an updated list of URLs to <em>displayNewSites</em>. The <em>displayNewSites</em> component will then auomatically update the web site's &quot;What's New&quot; section accordingly.</p>    <p>The following diagram illustrates this:</p>    <p class="paragraph">      <div class="panel" style="border-style: solid; border-color: #ccc; ">        <div class="panelHeader" style="border-bottom-style: solid; border-bottom-color: #ccc; "><b>News Feed Monitoring System</b></div>        <div class="panelContent">          <div align="center"><img border=0 src="http://www.servicemix.org/download/attachments/33556/usecase_for_rss.jpg"></div>        </div>      </div>    </p>  </div></div>          &nbsp;        </td>      </tr>      <tr>        <td colspan="3" id="footer">          <table width="100%">             <tr>              <td align="left" valign="top">          Copyright 2004. All rights reserved unless otherwise noted.<br/>          Powered by <a href="http://atlassian.com/">Atlassian</a> <a href="http://atlassian.com/confluence/">Confluence</a>.              </td>              <td align="right" valign="top">          <a style="color:#999;" href="http://docs.codehaus.org/pages/editpage.action?spaceKey=SM&title=Use+Cases">[ edit ]</a>              </td>            </tr>          <table>        </td>      </tr>    </table>  </body></html>